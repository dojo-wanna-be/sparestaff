<%= form_tag request_payment_transaction_path, id: 'payment-form', method: :patch do |f| %>
  <div class="credit-card-detail">
    <div class="card-errors"></div>
    <div class="custom-input-group">
      <label class="thin-label">Card info*</label>
      <%= text_field_tag :first_name, nil, placeholder: "Name on card", class: 'custom-field' %>
    </div>
    <div id="card-element"></div>
    <div id="card-errors" role="alert"></div>

    <!-- <div class="custom-input-group">
      
      <%#= text_field_tag :card_number, nil, placeholder: "Card number", class: 'custom-field card-number', data: {stripe: "number"} %>
    </div> -->

    <!-- <div class="joint-group">
      <div class="custom-input-group">
        <%#= text_field_tag :card_verification, nil, placeholder: "MM/YY", class: 'custom-field card_expiry_date', data: {stripe: "number"} %>
      </div>
      <div class="custom-input-group">
        <%#= text_field_tag :cvv, nil, placeholder: "CVV", class: 'custom-field card-cvc', data: {stripe: "card-cvc"} %>
      </div>
    </div> -->

    <div class="joint-group">
      <!-- <div class="custom-input-group">
        <label class="thin-label">Billing info*</label>
        <%#= text_field_tag :zip_code, nil, placeholder: "Zip code", class: 'custom-field' %>
      </div> -->
      <div class="custom-input-group">
        <label class="thin-label">Billing country*</label>
        <select class="custom-field">
          <option>Credit Card</option>
          <option>PayPal</option>
        </select>
      </div>
    </div>
    <div class="custom-input-group">
      <label class="thin-label">Redeem a Coupon</label>
      <%= text_field_tag :address_1, nil, placeholder: "", class: 'custom-field' %>
    </div>

    <div class="italic-text"><em >*required details</em></div>

    <h2 class="com-nor-heading">Cancellation policy</h2>

    <p>Cancel up to 24 hours before contract start date time and get a full refund (minus service fees). Cancel within 24 hours of contract start date time and the first day is non-refundable. Service fees are refunded if cancellation happens before contract start date time and within 48 hours of booking.</p>

    <h2 class="com-nor-heading">I agree to <span><%= link_to 'Cancellation Policy', 'https://www.sparestaff.com.au/cancellation-policy', target: "_blank", class: 'bold-link' %></span>, and <span><%= link_to 'Hirer Refund Policy', 'https://www.sparestaff.com.au/hirer-refund-policy', target: "_blank", class: 'bold-link' %></span>. I also agree to pay the weekly total amount shown, which includes Service Fees.</h2>
  </div>

  <div class="button-box">
    <button class="continue-btn">Request to hire</button>
  </div>
<% end %>
<script type="text/javascript">
  // Create a Stripe client
  var stripe = Stripe("<%= ENV['STRIPE_PUBLIC_KEY'] %>");

  // Create an instance of Elements
  var elements = stripe.elements();

  // Custom styling can be passed to options when creating an Element.
  // (Note that this demo uses a wider set of styles than the guide below.)
  var style = {
    base: {
      color: '#32325d',
      lineHeight: '18px',
      fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
      fontSmoothing: 'antialiased',
      fontSize: '16px',
      '::placeholder': {
        color: '#aab7c4'
      }
    },
    invalid: {
      color: '#fa755a',
      iconColor: '#fa755a'
    }
  };

  // Create an instance of the card Element
  var card = elements.create('card', {style: style});

  // Add an instance of the card Element into the `card-element` <div>
  card.mount('#card-element');

  // Handle real-time validation errors from the card Element.
  card.addEventListener('change', function(event) {
    var displayError = document.getElementById('card-errors');
    if (event.error) {
      displayError.textContent = event.error.message;
      $("#submit_button").attr('disabled', true);
    } else {
      displayError.textContent = '';
      $("#submit_button").attr('disabled', false);
      $("#submit_button").text('Submit');
    }
  });

  // Handle form submission
  var form = document.getElementById('payment-form');
  form.addEventListener('submit', function(event) {
    event.preventDefault();
    debugger
    stripe.createToken(card).then(function(result) {
      if (result.error) {
        // Inform the user if there was an error
        var errorElement = document.getElementById('card-errors');
        errorElement.textContent = result.error.message;
      } else {
        $("#stripe_token").val(result.token.id)
        form.submit();
      }
    });
  });

  // $(document).ready(function() {
  //   $("#payment-form").validate({
  //     rules: {
  //       "address_line1" : {required: true },
  //       "address_city"  : {required: true},
  //       "address_state" : {required: true},
  //       "address_zip"   : {required: true},
  //       "address_country": {required: true}
  //     },
     
  //   });
  // });
</script>