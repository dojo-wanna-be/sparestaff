$('#change_booking_slots').html("<%= j render 'change_time_slot_booking', transaction: @transaction, employee_listing: @employee_listing, start_date: @start_date, end_date: @end_date %>")
sundayHour = <%= @sundayHour.present? ? @sundayHour : 0%>
mondayHour = <%= @mondayHour.present? ? @mondayHour : 0%>
tuesdayHour = <%= @tuesdayHour.present? ? @tuesdayHour : 0%>
wednesdayHour = <%= @wednesdayHour.present? ? @wednesdayHour : 0%>
thursdayHour = <%= @thursdayHour.present? ? @thursdayHour : 0%>
fridayHour = <%= @fridayHour.present? ? @fridayHour : 0%>
saturdayHour = <%= @saturdayHour.present? ? @saturdayHour : 0%>
isDateChange = true
cal_amount();
$.validator.addMethod('lessThan', function(value, element, param) {
  return this.optional(element) || value < $(param).val();
}, "The value {0} must be less than {1}");

$.validator.addMethod('greaterThan', function(value, element, param) {
  return this.optional(element) || value > $(param).val();
}, "The value {0} must be less than {1}");

$.validator.addMethod("dateGreaterThan", function(value, element, params) {
  if (!/Invalid|NaN/.test(new Date(value))) {
    return new Date(value) > new Date($(params).val());
  }
  return isNaN(value) && isNaN($(params).val()) || (Number(value) > Number($(params).val()));
},'Must be greater than {0}');

$.validator.addMethod("dateLessThan", function(value, element, params) {
  if (!/Invalid|NaN/.test(new Date(value))) {
    return new Date(value) < new Date($(params).val());
  }
  return isNaN(value) && isNaN($(params).val()) || (Number(value) < Number($(params).val()));
},'Must be less than {0}');

$("#listing_transaction").validate({
  errorPlacement: function(error, element) {
     error.appendTo(element.parent());
  },
  rules: {
    "transaction[booking_attributes][0][end_time]": {greaterThan: "#transaction_booking_attributes_0_start_time"},
    "transaction[booking_attributes][1][end_time]": {greaterThan: "#transaction_booking_attributes_1_start_time"},
    "transaction[booking_attributes][2][end_time]": {greaterThan: "#transaction_booking_attributes_2_start_time"},
    "transaction[booking_attributes][3][end_time]": {greaterThan: "#transaction_booking_attributes_3_start_time"},
    "transaction[booking_attributes][4][end_time]": {greaterThan: "#transaction_booking_attributes_4_start_time"},
    "transaction[booking_attributes][5][end_time]": {greaterThan: "#transaction_booking_attributes_5_start_time"},
    "transaction[booking_attributes][6][end_time]": {greaterThan: "#transaction_booking_attributes_6_start_time"},
    "transaction[start_date]": {required: true},
    "transaction[end_date]": {required: true, dateGreaterThan: "#transaction_start_date"},
  },
  messages: {
    "transaction[booking_attributes][0][end_time]": {greaterThan: "Must be greater than Sunday Start Time"},
    "transaction[booking_attributes][1][end_time]": {greaterThan: "Must be greater than Monday Start Time"},
    "transaction[booking_attributes][2][end_time]": {greaterThan: "Must be greater than Tuesday Start Time"},
    "transaction[booking_attributes][3][end_time]": {greaterThan: "Must be greater than Wednesday Start Time"},
    "transaction[booking_attributes][4][end_time]": {greaterThan: "Must be greater than Thursday Start Time"},
    "transaction[booking_attributes][5][end_time]": {greaterThan: "Must be greater than Friday Start Time"},
    "transaction[booking_attributes][6][end_time]": {greaterThan: "Must be greater than Saturday Start Time"},
    "transaction[end_date]": {dateGreaterThan: "Must be greater than Start Date"},
  }
});

function cal_amount(){
  totalSundays = 0;
  totalMondays = 0;
  totalTuesdays = 0;
  totalWednesdays = 0;
  totalThursdays = 0;
  totalFridays = 0;
  totalSaturdays = 0;
  var start = $("#transaction_start_date").val();
  var end = $("#transaction_end_date").val();
  var startDate = new Date(start);
  var endDate = new Date(end);
  if (startDate < endDate){
    for (var i = startDate; i <= endDate; ){
      if (i.getDay() == 0){
        totalSundays++;
      }else if (i.getDay() == 1) {
        totalMondays++;
      }else if (i.getDay() == 2) {
        totalTuesdays++;
      }else if (i.getDay() == 3) {
        totalWednesdays++;
      }else if (i.getDay() == 4) {
        totalThursdays++;
      }else if (i.getDay() == 5) {
        totalFridays++;
      }else if (i.getDay() == 6) {
        totalSaturdays++;
      }
      i.setTime(i.getTime() + 1000*60*60*24);
    }
    setWeekdayHours();
    setWeekendHours();
  }
}

function validateAvailability(start_date, end_date, listing, transaction){
  $.ajax({
    url: "/reservations/check_slot_availability",
    type: "GET",
    data : {
      start: start_date,
      end: end_date,
      listing_id: listing,
      transaction_id: transaction,
    },
    dataType: "script",
  });
}

function calculateTax(){
  var weekly_earning = hiring_weekday_price + hiring_weekend_price;
  displayData(weekly_earning)
}

function displayData(weekly_earning){
  $("#weekly_hourly_total").html(weekly_earning);
  $(".right_weekly_hourly_total").val(weekly_earning)
  var tax;
  if(is_tax_with_holding)
    tax = checkTax(weekly_earning)
  else
    tax = 0
  var hirer_service_tax = <%= hirer_commission %> * (weekly_earning - tax);
  var poster_service_tax = <%= poster_commission %> * (weekly_earning - tax);

  $("#transaction_tax_withholding_amount").html(tax);
  $("#right_transaction_tax_withholding_amount").html(tax);

  $("#weeklyServicePrice").html(hirer_service_tax.toFixed(2));
  $("#rightWeeklyServicePrice").html(poster_service_tax.toFixed(2))

  var hirerWeeklyTotalPrice = weekly_earning - Math.abs(tax) + hirer_service_tax;
  var posterWeeklyTotalPrice = weekly_earning - Math.abs(tax) - poster_service_tax;

  $(".new_weekly_payout").html(posterWeeklyTotalPrice.toFixed(2));
  
  var oldPrice = parseFloat($('#old_weekly_total_price').html());
  $('#weekly_total_price_difference').html((posterWeeklyTotalPrice - oldPrice).toFixed(2));
  totalEmploymentContract(Math.abs(tax), poster_service_tax, weekly_earning);
}

function checkTax(weekly_earning){
  var a = 0;
  var b = 0;
  var x = weekly_earning + 0.99;
  if (x >= 0 && x <= 355){
    a = 0;
    b = 0;
  }else if (x > 355 && x <= 422){
    a = 0.1900;
    b = 67.4635;
  }else if (x > 422 && x <= 528){
    a = 0.2900;
    b = 109.7321;
  }else if (x > 528 && x <= 711){
    a = 0.2100;
    b = 67.4635;
  }else if (x > 711 && x <= 1282){
    a = 0.3477;
    b = 165.4423;
  }else if (x > 1282 && x <= 1730){
    a = 0.3450;
    b = 161.9808;
  }else if (x > 1730 && x <= 3461){
    a = 0.3900;
    b = 239.8654;
  }else{
    a = 0.4700;
    b = 516.788;
    //b = 576.7885;
  }
  var tax = parseFloat(((a * x) - b).toFixed(2))
  return tax
}

function totalEmploymentContract(tax, service_tax, weeklyTotalPrice){
  var startDate = new Date($("#transaction_start_date").val());
  var endDate = new Date($("#transaction_end_date").val());
  var weekDiff = ((endDate - startDate + 1) / (1000 * 60 * 60 * 24) / 7);
  var monday = 0;
  var tuesday = 0;
  var wednesday = 0;
  var thursday = 0;
  var friday = 0;
  var saturday = 0;
  var sunday = 0;

  if(totalMondays != 0)
    monday = totalMondays - Math.floor(weekDiff)
  if(totalTuesdays != 0)
    tuesday = totalTuesdays - Math.floor(weekDiff)
  if(totalWednesdays != 0)
    wednesday = totalWednesdays - Math.floor(weekDiff)
  if(totalThursdays != 0)
    thursday = totalThursdays - Math.floor(weekDiff)
  if(totalFridays != 0)
    friday = totalFridays - Math.floor(weekDiff)
  if(totalSaturdays != 0)
    saturday = totalSaturdays - Math.floor(weekDiff)
  if(totalSundays != 0)
    sunday = totalSundays - Math.floor(weekDiff)

  var remainingWeekDayPrice =  (monday * mondayHour + tuesday * tuesdayHour + wednesday * wednesdayHour + thursday * thursdayHour + friday * fridayHour) * listingWeekdayPrice
  var remainingWeekendPrice = (saturday * saturdayHour + sunday * sundayHour) * listingWeekendPrice

  var remainingWeeklyEarning = remainingWeekDayPrice + remainingWeekendPrice
  $("#right_total_hourly").html(((weeklyTotalPrice * Math.floor(weekDiff)) + remainingWeeklyEarning).toFixed(2));
  var remainingWeekTax = 0;
  var fullWeekTax = 0;
  if(is_tax_with_holding){
    remainingWeekTax = checkTax(remainingWeeklyEarning)
    fullWeekTax = (tax * Math.floor(weekDiff)) + remainingWeekTax
  }

  $('#total_tax_with_holding').val(fullWeekTax);
  $('#ContractTaxPrice').html(fullWeekTax);

  var remainingServiceTax = <%= poster_commission %> * (remainingWeeklyEarning - remainingWeekTax)
  var serviceTax = (service_tax * Math.floor(weekDiff)) + remainingServiceTax
  
  var weekly_price_after_tax = weeklyTotalPrice - tax - service_tax
  var remainingPrice = remainingWeeklyEarning - remainingWeekTax - remainingServiceTax
  var totalNewPrice = (weekly_price_after_tax * Math.floor(weekDiff)) + remainingPrice
  $('#ContractServicePrice').html(serviceTax.toFixed(2));
  $('#ContractTotalPrice').html(totalNewPrice.toFixed(2));
  var totalOldPrice = parseFloat($('#OldContractTotalPrice').html());
  $('#ContractTotalPriceDifference').html((totalNewPrice - totalOldPrice).toFixed(2));
}

function setWeekdayHours(){
  totalMondayHours = totalMondays * mondayHour;
  totalTuesdayHours = totalTuesdays * tuesdayHour;
  totalWednesdayHours = totalWednesdays * wednesdayHour;
  totalThursdayHours = totalThursdays * thursdayHour;
  totalFridayHours = totalFridays * fridayHour;
  weekday_hour = mondayHour + tuesdayHour + wednesdayHour + thursdayHour + fridayHour;
  totalWeekdayHours = totalMondayHours + totalTuesdayHours + totalWednesdayHours + totalThursdayHours + totalFridayHours;
  $("#weekday_hours").html(weekday_hour);
  hiring_weekday_price = weekday_hour * listingWeekdayPrice
  $("#hiring_weekday_price").html(hiring_weekday_price.toFixed(2));
  $("#total_weekday_hours").html(totalWeekdayHours);
  hiring_total_weekday_price = totalWeekdayHours * listingWeekdayPrice;
  $("#hiring_total_weekday_price").html(hiring_total_weekday_price.toFixed(2));
  calculateTax();
}

function setWeekendHours(){
  totalSaturdayHours = totalSaturdays * saturdayHour;
  totalSundayHours = totalSundays * sundayHour;
  weekend_hour = saturdayHour + sundayHour;
  totalWeekendHours = totalSundayHours + totalSaturdayHours;
  $("#weekend_hours").html(weekend_hour);
  hiring_weekend_price = weekend_hour * listingWeekendPrice;
  $("#hiring_weekend_price").html(hiring_weekend_price.toFixed(2));
  $("#total_weekend_hours").html(totalWeekendHours);
  hiring_total_weekend_price = totalWeekendHours * listingWeekendPrice;
  $("#hiring_total_weekend_price").html(hiring_total_weekend_price.toFixed(2));
  calculateTax();
}

$(".monday_time_slot").change(function(){
  if (($("#transaction_booking_attributes_1_start_time").val() != '' && $("#transaction_booking_attributes_1_end_time").val() != '') && ($("#transaction_booking_attributes_1_start_time").val() < $("#transaction_booking_attributes_1_end_time").val())) {
    if(totalMondays != 0){
      mondayHour = parseInt($("#transaction_booking_attributes_1_end_time").val()) - parseInt($("#transaction_booking_attributes_1_start_time").val());
      setWeekdayHours();
      isMonday = true;
    }
  }else {
    mondayHour = 0;
    totalMondayHours = 0;
    isMonday = false;
  }
});

$(".tuesday_time_slot").change(function(){
  if (($("#transaction_booking_attributes_2_start_time").val() != '' && $("#transaction_booking_attributes_2_end_time").val() != '') && ($("#transaction_booking_attributes_2_start_time").val() < $("#transaction_booking_attributes_2_end_time").val())) {
    if(totalTuesdays != 0){
      tuesdayHour = parseInt($("#transaction_booking_attributes_2_end_time").val()) - parseInt($("#transaction_booking_attributes_2_start_time").val());
      setWeekdayHours();
      isTuesday = true;
    }
    
  }else {
    tuesdayHour = 0;
    totalTuesdayHours = 0;
    isTuesday = false;
  }
});

$(".wednesday_time_slot").change(function(){
  if (($("#transaction_booking_attributes_3_start_time").val() != '' && $("#transaction_booking_attributes_3_end_time").val() != '') && ($("#transaction_booking_attributes_3_start_time").val() < $("#transaction_booking_attributes_3_end_time").val())) {
    if(totalWednesdays != 0){
      wednesdayHour = parseInt($("#transaction_booking_attributes_3_end_time").val()) - parseInt($("#transaction_booking_attributes_3_start_time").val());
      isWednesday = true;
      setWeekdayHours();
    }
  }else {
    wednesdayHour = 0;
    totalWednesdayHours = 0;
    isWednesday = false;
  }
});

$(".thursday_time_slot").change(function(){
  if (($("#transaction_booking_attributes_4_start_time").val() != '' && $("#transaction_booking_attributes_4_end_time").val() != '') && ($("#transaction_booking_attributes_4_start_time").val() < $("#transaction_booking_attributes_4_end_time").val())) {
    if(totalThursdays != 0){
      thursdayHour = parseInt($("#transaction_booking_attributes_4_end_time").val()) - parseInt($("#transaction_booking_attributes_4_start_time").val());
      isThursday = true;
      setWeekdayHours();
    }
  }else {
    thursdayHour = 0;
    totalThursdayHours = 0;
    isThursday = false;
  }
});

$(".friday_time_slot").change(function(){
  if (($("#transaction_booking_attributes_5_start_time").val() != '' && $("#transaction_booking_attributes_5_end_time").val() != '') && ($("#transaction_booking_attributes_5_start_time").val() < $("#transaction_booking_attributes_5_end_time").val())) {
    if(totalFridays != 0){
      fridayHour = parseInt($("#transaction_booking_attributes_5_end_time").val()) - parseInt($("#transaction_booking_attributes_5_start_time").val());
      isFriday = true;
      setWeekdayHours();
    }
  }else {
    fridayHour = 0;
    totalFridayHours = 0;
    isFriday = false;
  }
});

$(".sunday_time_slot").change(function(){
  if (($("#transaction_booking_attributes_0_start_time").val() != '' && $("#transaction_booking_attributes_0_end_time").val() != '') && ($("#transaction_booking_attributes_0_start_time").val() < $("#transaction_booking_attributes_0_end_time").val())) {
    if(totalSundays != 0){
      sundayHour = parseInt($("#transaction_booking_attributes_0_end_time").val()) - parseInt($("#transaction_booking_attributes_0_start_time").val());
      isSunday = true;
      setWeekendHours();
    }
  }else {
    sundayHour = 0;
    totalSundayHours = 0;
    isSunday = false;
  }
});

$(".saturday_time_slot").change(function(){
  if (($("#transaction_booking_attributes_6_start_time").val() != '' && $("#transaction_booking_attributes_6_end_time").val() != '') && ($("#transaction_booking_attributes_6_start_time").val() < $("#transaction_booking_attributes_6_end_time").val())) {
    if(totalSundays != 0){
      saturdayHour = parseInt($("#transaction_booking_attributes_6_end_time").val()) - parseInt($("#transaction_booking_attributes_6_start_time").val());
      isSaturday = true;
      setWeekendHours();
    }
  }else {
    saturdayHour = 0;
    totalSaturdayHours = 0;
    isSaturday = false;
  }
});

$("#listing_transaction").submit(function(e){
  if ( isSunday || isMonday || isTuesday || isWednesday || isThursday || isFriday || isSaturday || isDateChange ) {
    if (<%= @employee_listing.minimum_working_hours %> > (sundayHour + mondayHour + tuesdayHour + wednesdayHour + thursdayHour + fridayHour + saturdayHour)){
      $("#total_hour_error").show();
      return false
    }else {
      $("#timing_error").hide();
      $("#total_hour_error").hide();
      return true
    }
  }else {
    $("#timing_error").show();
    return false
  }
});

$( "#transaction_amount" ).keyup(function() {
  var weekly_earning = hiring_weekday_price + hiring_weekend_price;
  var new_weekly_earning = parseFloat(this.value);
  if(weekly_earning < new_weekly_earning){
    displayData(weekly_earning)
    $("#adjustment_amount").val(new_weekly_earning - weekly_earning)
  }
})
