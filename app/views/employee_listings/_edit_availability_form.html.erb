<%= form_for @employee_listing, url: employee_path, method: :patch, :html => { :id => "str_tme_id" } do |f| %>
  <%= hidden_field_tag "id", @employee_listing.id %>
  <%= hidden_field_tag "edit", "listing_availability" %>

  <div class="custom-input-group">
    <label class="custom-label">Availability of the employee <span class="thin-text">(tick all that applies)</span></label>

    <div class="availability-box">
      <% Slot.all.each do |slot| %>
        <div class="check-box">
          <%= check_box_tag "slot_ids[]", slot.id, @employee_listing.slots.pluck(:id).include?(slot.id), class: "slot_check" %>
          <%= slot.time_slot %>
        </div>
      <%end%>
    </div>
    <p class="employee-might">As the employee might have other commitment, itâ€™s necessary to tell Hirers which day and time he/she is available to be hired.</p>

    <div class="week-availability">
      <ul class="from-to-list">
        <li class="header-item">
          <div class="from-text">From</div>
          <div class="to-text">To</div>
        </li>

        <% ListingAvailability::DAYS.each_with_index do |day, index| %>
          <li class="availability-item">
            <div class="start-side">
              <span><%= day[0] %></span>
              <% if f.object.listing_availabilities.present? %>
                <% if f.object.listing_availabilities.where(day: day[1], not_available: false).present? %>
                  <%= select_tag "start_time[]#{day[1]}", options_for_select(ListingAvailability::TIME_SLOTS, selected_start_time(f.object, day[1])), include_blank: 'Start time', class: 'cust_str_id start-side-select' %>
                <% else %>
                  <%= select_tag "start_time[]#{day[1]}", options_for_select(ListingAvailability::TIME_SLOTS, selected_start_time(f.object, day[1])), include_blank: 'Start time', class: 'cust_str_id start-side-select', disabled: 'disabled'%>
                <% end %>
              <% else %>
                <%= select_tag "start_time[]#{day[1]}", options_for_select(ListingAvailability::TIME_SLOTS, selected_start_time(f.object, day[1])), include_blank: 'Start time', class: 'cust_str_id start-side-select' %>
              <% end %>
            </div>
            <div class="end-side">
              <% if f.object.listing_availabilities.present? %>
                <% if f.object.listing_availabilities.where(day: day[1], not_available: false).present? %>
                  <%= select_tag "end_time[]#{day[1]}", options_for_select(ListingAvailability::TIME_SLOTS, selected_end_time(f.object, day[1])), include_blank: 'End time', class: 'end_str_id end-side-select' %>
                  <div class="availability-checkbox">
                    <%= check_box_tag "unavailable_days[]", day[1], false, class: "unavailable_day_check", id: "unavailable_check_#{day[1]}" %>
                    <span>Not available</span>
                  </div>
                <% else %>
                  <%= select_tag "end_time[]#{day[1]}", options_for_select(ListingAvailability::TIME_SLOTS, selected_end_time(f.object, day[1])), include_blank: 'End time', class: 'end_str_id end-side-select', disabled: 'disabled' %>
                  <div class="availability-checkbox">
                    <%= check_box_tag "unavailable_days[]", day[1], true, class: "unavailable_day_check", id: "unavailable_check_#{day[1]}" %>
                    <span>Not available</span>
                  </div>
                <% end %>
              <% else %>
                <%= select_tag "end_time[]#{day[1]}", options_for_select(ListingAvailability::TIME_SLOTS, selected_end_time(f.object, day[1])), include_blank: 'End time', class: 'end_str_id end-side-select' %>
                <div class="availability-checkbox">
                  <%= check_box_tag "unavailable_days[]", day[1], false, class: "unavailable_day_check", id: "unavailable_check_#{day[1]}" %>
                  <span>Not available</span>
                </div>
              <% end %>
            </div>
          </li>
        <% end %>

      </ul>
    </div>
  </div>

  <div class="custom-input-group">
    <label class="custom-label">Public holiday</label>

    <div class="holiday-box">
      <div class="avail-box"><%= f.radio_button :available_in_holidays, true %> <span>Available</span>
      </div>
      <div class="avail-box"><%= f.radio_button :available_in_holidays, false %> <span>Not available</span>
      </div>
    </div>
  </div>

  <div class="custom-input-group">
    <label class="custom-label">Minimum employment term per week <span class="thin-text">(optional)</span></label>
    <%= f.select :minimum_working_hours, options_for_select(EmployeeListing::MINIMUM_WORKING_HOURS, f.object.minimum_working_hours), {}, {class: 'custom-field half-field'} %>
  </div>

  <div class="button-box">
    <%= f.submit "Save", class: "continue-btn prw_btn" %>
  </div>
<% end %>

<script type="text/javascript">
  $.validator.addMethod('lessThan', function(value, element, param) {
    return this.optional(element) || value < $(param).val();
  }, "The value {0} must be less than {1}");

  $.validator.addMethod('greaterThan', function(value, element, param) {
    return this.optional(element) || value > $(param).val();
  }, "The value {0} must be less than {1}");

  $(".unavailable_day_check").on('change', function () {
    if ($("#unavailable_check_sunday").is(":checked") && $("#unavailable_check_saturday").is(":checked")) {
      $("#employee_listing_weekend_price").attr("disabled", "disabled");
      $("#employee_listing_other_weekend_price").attr("disabled", "disabled");
    }else{
      $("#employee_listing_weekend_price").removeAttr("disabled");
      $("#employee_listing_other_weekend_price").removeAttr("disabled");
    }
  });

  $("#str_tme_id").validate({
    errorPlacement: function(error, element) {
       error.appendTo(element.parent());
    },
    rules: {
    "start_time[]monday": {required: true, lessThan: "#end_time_monday"},
    "start_time[]tuesday": {required: true, lessThan: "#end_time_tuesday"},
    "start_time[]wednesday": {required: true, lessThan: "#end_time_wednesday"},
    "start_time[]thursday": {required: true, lessThan: "#end_time_thursday"},
    "start_time[]friday": {required: true, lessThan: "#end_time_friday"},
    "start_time[]saturday": {required: true, lessThan: "#end_time_saturday"},
    "start_time[]sunday": {required: true, lessThan: "#end_time_sunday"},
    "end_time[]monday": {required: true, greaterThan: "#start_time_monday"},
    "end_time[]tuesday": {required: true, greaterThan: "#start_time_tuesday"},
    "end_time[]wednesday": {required: true, greaterThan: "#start_time_wednesday"},
    "end_time[]thursday": {required: true, greaterThan: "#start_time_thursday"},
    "end_time[]friday": {required: true, greaterThan: "#start_time_friday"},
    "end_time[]saturday": {required: true, greaterThan: "#start_time_saturday"},
    "end_time[]sunday": {required: true, greaterThan: "#start_time_sunday"},
    "slot_ids[]": {required: true},
    },
    messages: {
      "start_time[]monday": {lessThan: "Must be less than Monday End Time"},
      "start_time[]tuesday": {lessThan: "Must be less than Tuesday End Time"},
      "start_time[]wednesday": {lessThan: "Must be less than Wednesday End Time"},
      "start_time[]thursday": {lessThan: "Must be less than Thursday End Time"},
      "start_time[]friday": {lessThan: "Must be less than Friday End Time"},
      "start_time[]saturday": {lessThan: "Must be less than Saturday End Time"},
      "start_time[]sunday": {lessThan: "Must be less than Sunday End Time"},
      "end_time[]monday": {greaterThan: "Must be greater than Monday Start Time"},
      "end_time[]tuesday": {greaterThan: "Must be greater than Tuesday Start Time"},
      "end_time[]wednesday": {greaterThan: "Must be greater than Wednesday Start Time"},
      "end_time[]thursday": {greaterThan: "Must be greater than Thursday Start Time"},
      "end_time[]friday": {greaterThan: "Must be greater than Friday Start Time"},
      "end_time[]saturday": {greaterThan: "Must be greater than Saturday Start Time"},
      "end_time[]sunday": {greaterThan: "Must be greater than Sunday Start Time"},
    }
  });

  $("#employee_listing_available_in_holidays_false").change(function(){
    if ($(this).is(":checked")){
      $("#employee_listing_holiday_price").attr("disabled", "disabled");
      $("#employee_listing_other_holiday_price").attr("disabled", "disabled");
    }
  });

  $("#employee_listing_available_in_holidays_true").change(function(){
    if ($(this).is(":checked")){
      $("#employee_listing_holiday_price").removeAttr("disabled");
      $("#employee_listing_other_holiday_price").removeAttr("disabled");
    }
  });
</script>

<style type="text/css">
  .error{
    color:#FF0000;
  }
</style>
