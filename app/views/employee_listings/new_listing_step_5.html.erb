<div class="new-listing-step_section">
  <div class="inner-listing-section">
    <div class="left-white-side">
      <h1 class="main-heading">Employee availability and your earning</h1>

      <div class="who-box">

        <%= form_for @employee_listing, url: create_step_5_employee_path, method: :patch, :html => { :id => "str_tme_id" } do |f| %>
          <%= hidden_field_tag "id", @employee_listing.id %>

          <div class="custom-input-group">
            <label class="custom-label">Availability of the employee <span class="thin-text">(tick all that applies)</span></label>

            <div class="availability-box">
              <% Slot.all.each do |slot| %>
                <div class="check-box">
                  <%= check_box_tag "slot_ids[]", slot.id, @employee_listing.slots.pluck(:id).include?(slot.id), class: "slot_check" %>
                  <%= slot.time_slot %>
                </div>
              <%end%>
            </div>
            <p class="employee-might">As the employee might have other commitment, it’s necessary to tell Hirers which day and time he/she is available to be hired.</p>

            <div class="week-availability">
              <ul class="from-to-list">
                <li class="header-item">
                  <div class="from-text">From</div>
                  <div class="to-text">To</div>
                </li>

                <% ListingAvailability::DAYS.each_with_index do |day, index| %>
                  <li class="availability-item">
                    <div class="start-side">
                      <span><%= day[0] %></span>
                      <% if f.object.listing_availabilities.present? %>
                        <% if f.object.listing_availabilities.where(day: day[1], not_available: false).present? %>
                        <%#unless @availability[index]["#{day[1]}"] %>
                          <%= select_tag "start_time[]#{day[1]}", options_for_select(ListingAvailability::TIME_SLOTS, selected_start_time(f.object, day[1])), include_blank: 'Start time', class: 'cust_str_id start-side-select' %>
                        <% else %>
                          <%= select_tag "start_time[]#{day[1]}", options_for_select(ListingAvailability::TIME_SLOTS, selected_start_time(f.object, day[1])), include_blank: 'Start time', class: 'cust_str_id start-side-select', disabled: 'disabled'%>
                        <% end %>
                      <% else %>
                        <%= select_tag "start_time[]#{day[1]}", options_for_select(ListingAvailability::TIME_SLOTS, selected_start_time(f.object, day[1])), include_blank: 'Start time', class: 'cust_str_id start-side-select' %>
                      <% end %>
                    </div>
                    <div class="end-side">
                      <% if f.object.listing_availabilities.present? %>
                        <% if f.object.listing_availabilities.where(day: day[1], not_available: false).present? %>
                        <%# unless @availability[index]["#{day[1]}"] %>
                          <%= select_tag "end_time[]#{day[1]}", options_for_select(ListingAvailability::TIME_SLOTS, selected_end_time(f.object, day[1])), include_blank: 'End time', class: 'end_str_id end-side-select' %>
                          <div class="availability-checkbox">
                            <%= check_box_tag "unavailable_days[]", day[1], false, class: "unavailable_day_check", id: "unavailable_check_#{day[1]}" %>
                            <span>Not available</span>
                          </div>
                        <% else %>
                          <%= select_tag "end_time[]#{day[1]}", options_for_select(ListingAvailability::TIME_SLOTS, selected_end_time(f.object, day[1])), include_blank: 'End time', class: 'end_str_id end-side-select', disabled: 'disabled' %>
                          <div class="availability-checkbox">
                            <%= check_box_tag "unavailable_days[]", day[1], true, class: "unavailable_day_check", id: "unavailable_check_#{day[1]}" %>
                            <span>Not available</span>
                          </div>
                        <% end %>
                      <% else %>
                        <%= select_tag "end_time[]#{day[1]}", options_for_select(ListingAvailability::TIME_SLOTS, selected_end_time(f.object, day[1])), include_blank: 'End time', class: 'end_str_id end-side-select' %>
                        <div class="availability-checkbox">
                          <%= check_box_tag "unavailable_days[]", day[1], false, class: "unavailable_day_check", id: "unavailable_check_#{day[1]}" %>
                          <span>Not available</span>
                        </div>
                      <% end %>
                    </div>
                  </li>
                <% end %>

              </ul>
            </div>
          </div>

          <div class="custom-input-group">
            <label class="custom-label">Public holiday</label>

            <div class="holiday-box">
              <div class="avail-box"><%= f.radio_button :available_in_holidays, true %> <span>Available</span>
              </div>
              <div class="avail-box"><%= f.radio_button :available_in_holidays, false %> <span>Not available</span>
              </div>
            </div>
          </div>

          <div class="custom-input-group">
            <label class="custom-label">Select price per hour that Hirers are expected to pay to hire the employee</label>

            <div class="week-day-box">
              <label class="thin-label">Weekday</label>
              <div class="week-row">
                <%= f.select :weekday_price, options_for_select(EmployeeListing::PRICES, f.object.weekday_price.to_f), {}, {class: 'week-select'} %>

                <div class="mid-text">or</div>

                <%= f.number_field :other_weekday_price, min: 0, value: EmployeeListing::PRICES.map{|k,v| v }.include?(f.object.weekday_price.to_f) || f.object.weekday_price.to_f.eql?(0.0) ? nil : f.object.weekday_price.to_f, placeholder: "Enter your own", min: 0, class: 'custom-input' %>
              </div>

              <label class="thin-label">Weekend (if available)</label>
              <div class="week-row">
                <%= f.select :weekend_price, options_for_select(EmployeeListing::PRICES, f.object.weekend_price.to_f), {}, {class: 'week-select'} %>

                <div class="mid-text">or</div>

                <%= f.number_field :other_weekend_price, min: 0, value: EmployeeListing::PRICES.map{|k,v| v }.include?(f.object.weekend_price.to_f) || f.object.weekend_price.to_f.eql?(0.0) ? nil : f.object.weekend_price.to_f, placeholder: "Enter your own", min: 0, class: 'custom-input' %>
              </div>

              <label class="thin-label">Public holidays (if available)</label>
              <% if @employee_listing.available_in_holidays? || @employee_listing.holiday_price.present? %>
                <div class="week-row bottom-space">
                  <%= f.select :holiday_price, options_for_select(EmployeeListing::PRICES, f.object.holiday_price.to_f), {}, {class: 'week-select'} %>

                  <div class="mid-text">or</div>

                  <%= f.number_field :other_holiday_price, min: 0, value: EmployeeListing::PRICES.map{|k,v| v }.include?(f.object.holiday_price.to_f) || f.object.holiday_price.to_f.eql?(0.0) ? nil : f.object.holiday_price.to_f, placeholder: "Enter your own", min: 0, class: 'custom-input' %>
                </div>
              <% else %>
                <div class="week-row bottom-space">
                  <%= f.select :holiday_price, options_for_select(EmployeeListing::PRICES, f.object.holiday_price.to_f), {}, {class: 'week-select', disabled: "disabled"} %>

                  <div class="mid-text">or</div>

                  <%= f.number_field :other_holiday_price, min: 0, value: EmployeeListing::PRICES.map{|k,v| v }.include?(f.object.holiday_price.to_f) || f.object.holiday_price.to_f.eql?(0.0) ? nil : f.object.holiday_price.to_f, placeholder: "Enter your own", min: 0, class: 'custom-input', disabled: "disabled" %>
                </div>
              <% end %>
            </div>
          </div>

          <div class="custom-input-group">
            <label class="custom-label">Minimum employment term per week <span class="thin-text">(optional)</span></label>
            <%= f.select :minimum_working_hours, options_for_select(EmployeeListing::MINIMUM_WORKING_HOURS, f.object.minimum_working_hours), {}, {class: 'custom-field half-field'} %>
          </div>

          <%= hidden_field_tag "current_date", Date.today.strftime("%Y-%m-%d") %>

          <div class="custom-input-group">
            <label class="custom-label">When would you like to publish this listing?</label>
            <div class="date-box">
              <div class="date-sec">
                <label class="thin-label">Start Date</label>
                <%= f.date_field :start_publish_date, min: Date.today, id: 'str_pub' %>
              </div>
              <div class="date-sec">
                <label class="thin-label">End Date</label>
                <%= f.date_field :end_publish_date, min: Date.today + 1, id: 'pub_end' %>
              </div>
            </div>
          </div>

          <div class="comfirm-box">
            <%= check_box_tag "confirm_details", "", false, style: "height:30px", required: true %>
            <span class="">I confirm that this employee has a valid Australian visa with work rights.</span>
          </div>

          <!-- ONLY MOBILE SHOW -->
          <div class="bulb-box">
            <%= image_tag "light-bulb.png", alt: "", class: 'bulb-img' %>
            <br />
            Great progress. This is the last step.<br />
            <br />
            Let’s work out the employee availability and how much Hirer
            should pay you.<br />
            <br />
            Keep the employee availability up-to-date to avoid disappointing Hirers.<br />
          </div>

           <div class="bulb-box bulb-box-bottom">
            <%= image_tag "light-bulb.png", alt: "", class: 'bulb-img' %>
            <br />
            Select a price that you expect to charge Hirer, but keep it competitive to the market and increase your chances of getting a hiring.<br />
            <br />
            To publish your listing immediately, select today's date.<br />
          </div>
          <!-- ONLY MOBILE SHOW -->

          <div class="button-box">
            <span class="link-text">&lt; <%= link_to "Back", step_4_employee_path(id: @employee_listing.id, back: true), class: 'link-text' %></span>

            <%= f.submit "Save for later", name: "save_later", value: "Save for later", class: "link-text" %>

            <%= f.submit "Preview", class: "continue-btn prw_btn" %>
          </div>
        <% end %>
      </div>
    </div>

    <div class="right-grey-side">
      <div class="bulb-box">
        <%= image_tag "light-bulb.png", alt: "", class: 'bulb-img' %>
        <br />
        Great progress. This is the last step.<br />
        <br />
        Let’s work out the employee availability and how much Hirer
        should pay you.<br />
        <br />
        Keep the employee availability up-to-date to avoid disappointing Hirers.<br />
      </div>

       <div class="bulb-box bulb-box-bottom">
        <%= image_tag "light-bulb.png", alt: "", class: 'bulb-img' %>
        <br />
        Select a price that you expect to charge Hirer, but keep it competitive to the market and increase your chances of getting a hiring.<br />
        <br />
        To publish your listing immediately, select today's date.<br />
      </div>
    </div>
  </div>
</div>


<script type="text/javascript">
  $.validator.addMethod('lessThan', function(value, element, param) {
    return this.optional(element) || value < $(param).val();
  }, "The value {0} must be less than {1}");

  $.validator.addMethod('greaterThan', function(value, element, param) {
    return this.optional(element) || value > $(param).val();
  }, "The value {0} must be less than {1}");

  $.validator.addMethod("dateGreaterThan", function(value, element, params) {
    if (!/Invalid|NaN/.test(new Date(value))) {
      return new Date(value) > new Date($(params).val());
    }
    return isNaN(value) && isNaN($(params).val()) || (Number(value) > Number($(params).val()));
  },'Must be greater than {0}');

  $.validator.addMethod("dateLessThan", function(value, element, params) {
    if (!/Invalid|NaN/.test(new Date(value))) {
      return new Date(value) < new Date($(params).val());
    }
    return isNaN(value) && isNaN($(params).val()) || (Number(value) < Number($(params).val()));
  },'Must be less than {0}');

  $(".unavailable_day_check").on('change', function () {
    if ($("#unavailable_check_sunday").is(":checked") && $("#unavailable_check_saturday").is(":checked")) {
      $("#employee_listing_weekend_price").attr("disabled", "disabled");
      $("#employee_listing_other_weekend_price").attr("disabled", "disabled");
    }else{
      $("#employee_listing_weekend_price").removeAttr("disabled");
      $("#employee_listing_other_weekend_price").removeAttr("disabled");
    }
    if ($(this).is(":checked")) {
      var parent = $(this).parent().parent().parent();
      parent.find("select").removeClass("error");
      parent.find("select").attr("disabled", "disabled");
      parent.find("select").val("");
      parent.find("label.error").hide();
      parent.find("label#end_start_tm").hide();
      parent.find("label#tm_end").hide();
    } else {
      var parent = $(this).parent().parent().parent();
      parent.find("select").removeAttr("disabled");
    }
  });

  $("#str_tme_id").validate({
    errorPlacement: function(error, element) {
       error.appendTo(element.parent());
    },
    rules: {
      "start_time[]monday": {required: true},
      "start_time[]tuesday": {required: true},
      "start_time[]wednesday": {required: true},
      "start_time[]thursday": {required: true},
      "start_time[]friday": {required: true},
      "start_time[]saturday": {required: true},
      "start_time[]sunday": {required: true},
      "end_time[]monday": {required: true, greaterThan: "#start_time_monday"},
      "end_time[]tuesday": {required: true, greaterThan: "#start_time_tuesday"},
      "end_time[]wednesday": {required: true, greaterThan: "#start_time_wednesday"},
      "end_time[]thursday": {required: true, greaterThan: "#start_time_thursday"},
      "end_time[]friday": {required: true, greaterThan: "#start_time_friday"},
      "end_time[]saturday": {required: true, greaterThan: "#start_time_saturday"},
      "end_time[]sunday": {required: true, greaterThan: "#start_time_sunday"},
      "slot_ids[]": {required: true},
      "employee_listing[start_publish_date]": {required: true},
      "employee_listing[end_publish_date]": {required: true, dateGreaterThan: "#current_date", dateGreaterThan: "#str_pub"},
    },
    messages: {
      "end_time[]monday": {greaterThan: "Must be greater than Monday Start Time"},
      "end_time[]tuesday": {greaterThan: "Must be greater than Tuesday Start Time"},
      "end_time[]wednesday": {greaterThan: "Must be greater than Wednesday Start Time"},
      "end_time[]thursday": {greaterThan: "Must be greater than Thursday Start Time"},
      "end_time[]friday": {greaterThan: "Must be greater than Friday Start Time"},
      "end_time[]saturday": {greaterThan: "Must be greater than Saturday Start Time"},
      "end_time[]sunday": {greaterThan: "Must be greater than Sunday Start Time"},
      "employee_listing[end_publish_date]": {dateGreaterThan: "Must be greater than Current Date and Start Date"},
    }
  });

  $("#employee_listing_available_in_holidays_false").change(function(){
    if ($(this).is(":checked")){
      $("#employee_listing_holiday_price").attr("disabled", "disabled");
      $("#employee_listing_other_holiday_price").attr("disabled", "disabled");
    }
  });

  $("#employee_listing_available_in_holidays_true").change(function(){
    if ($(this).is(":checked")){
      $("#employee_listing_holiday_price").removeAttr("disabled");
      $("#employee_listing_other_holiday_price").removeAttr("disabled");
    }
  });
</script>

<style type="text/css">
  .error{
    color:#FF0000;
  }
</style>
