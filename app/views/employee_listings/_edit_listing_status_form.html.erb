<%= form_for @employee_listing, url: employee_path, method: :patch, :html => { :id => "str_tme_id" } do |f| %>
  <%= hidden_field_tag "id", @employee_listing.id %>
  <%= hidden_field_tag "edit", "listing_status" %>

  <div class="custom-input-group">
    <label class="custom-label">Listing Status</label>

    <div class="listed-green">
      <% if @employee_listing.published? %>
        <span class="circle-badge listed"></span>
        <span>Listed</span>
      <% else %>
        <span class="circle-badge not-listed"> </span>
        <span>Not Listed</span>
      <% end %>
    </div>
  </div>

  <%= hidden_field_tag "current_date", Date.today.strftime("%Y-%m-%d") %>

  <div class="custom-input-group">
    <label class="custom-label">When would you like to publish this listing?</label>
    <div class="date-box">
      <div class="date-sec">
        <label class="thin-label">Start Date</label>
        <%= f.date_field :start_publish_date, min: Date.today + 1, id: 'str_pub' %>
      </div>
      <div class="date-sec">
        <label class="thin-label">End Date</label>
        <%= f.date_field :end_publish_date, min: Date.today + 1, id: 'pub_end' %>
      </div>
    </div>
  </div>

  <%= link_to "Permanently deactivate my listing", edit_employee_path(id: @employee_listing.id, edit: "deactivation_reason"), class: "permanently_deactivate_link" %>

  <div class="button-box top_space">
    <%= f.submit "Save", class: "continue-btn prw_btn" %>
  </div>
<% end %>

<script type="text/javascript">
  $.validator.addMethod("greaterThan", function(value, element, params) {
    if (!/Invalid|NaN/.test(new Date(value))) {
      return new Date(value) > new Date($(params).val());
    }
    return isNaN(value) && isNaN($(params).val()) || (Number(value) > Number($(params).val())); 
  },'Must be greater than {0}');

  $.validator.addMethod("lessThan", function(value, element, params) {
    if (!/Invalid|NaN/.test(new Date(value))) {
      return new Date(value) < new Date($(params).val());
    }
    return isNaN(value) && isNaN($(params).val()) || (Number(value) < Number($(params).val())); 
  },'Must be less than {0}');

  $("#str_tme_id").validate({
    errorPlacement: function(error, element) {
       error.appendTo(element.parent());
    },
    rules: {
      "employee_listing[start_publish_date]": {required: true, greaterThan: "#current_date", lessThan: "#pub_end"},
      "employee_listing[end_publish_date]": {required: true, greaterThan: "#current_date", greaterThan: "#str_pub"},
    },
    messages: {
      "employee_listing[start_publish_date]": {greaterThan: "Must be greater than Current Date", lessThan: "Must be less than End Date"},
      "employee_listing[end_publish_date]": {greaterThan: "Must be greater than Current Date and Start Date"},
    }
  });
</script>

<style type="text/css">
  .error{
    color:#FF0000;
  }
</style>
